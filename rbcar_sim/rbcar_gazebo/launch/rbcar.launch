<?xml version="1.0"?>
<launch>

  <!-- roslaunch arguments -->
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>

  <arg name="x" default="-8.387403"/>
  <arg name="y" default="-30.027032"/>
  <arg name="z" default="0.035859"/>
  <arg name="roll" default="0.000401"/>
  <arg name="pitch" default="0.002969"/>
  <arg name="yaw" default="1.581388"/>

  <!-- rbcar_control launch file 
  <include file="$(find rbcar_control)/launch/rbcar_control.launch" />
  -->
  
  <!--include file="$(find rbcar_robot_control)/launch/rbcar_robot_control.launch" / -->

  <!-- rbcar_joy launch file -->
  <!-- Include this file only if you wish a the control the robot via joystick, it has to be commented if you want to set goals for autonomous navigation -->
  <!-- for this node to work correctly first you need to succesfully connect the ps3 joystick with:
		sudo su
		rosrun ps3joy sixpair
		rosrun ps3joy ps3joy.py
  -->
  <!-- include file="$(find rbcar_joystick)/launch/rbcar_joy.launch" / -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rbcar_gazebo)/worlds/circuit.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro '$(find rbcar_description)/robots/rbcar.urdf.xacro' --inorder" />
         
  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model rbcar -param robot_description -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

</launch>
